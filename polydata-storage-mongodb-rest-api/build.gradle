buildscript {
    ext {
        springBootVersion = '1.5.4.RELEASE'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:1.4.17"
        classpath "se.transmode.gradle:gradle-docker:1.2"
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

springBoot {
    executable = true
}

repositories {
    maven { url 'http://maven.restlet.org' }
}
apply plugin: "com.gorylenko.gradle-git-properties"


dependencies {
    compile 'org.jminix:jminix:1.2.0'

    compile 'javax.cache:cache-api'
    compile 'net.sf.ehcache:ehcache'

    compile("com.unidev.platform:unidev-strings:$project.unidevPlatformVersion")
    compile("com.unidev.platform:unidev-j2ee:$project.unidevPlatformVersion")
    compile("com.unidev.platform:unidev-exception:$project.unidevPlatformVersion")
    compile("com.unidev.platform:unidev-dto:$project.unidevPlatformVersion")

    compileOnly "org.projectlombok:lombok:1.16.16"

    compile project(":polydata-storage-mongodb-core")

    compile 'io.springfox:springfox-swagger2:2.6.1'
    compile 'io.springfox:springfox-swagger-ui:2.6.1'

    compile('org.springframework.boot:spring-boot-starter-cache')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-hateoas')
    compile('org.springframework.boot:spring-boot-starter-web')


}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Camden.SR3"
        mavenBom "com.vaadin:vaadin-bom:7.7.5"
    }
}

apply plugin: 'docker'
task buildDocker(type: Docker) {
    baseImage = 'java:8'
    push = project.hasProperty('push')
    tag = 'unidev/polydata-storage-mongodb-rest-api'
    addFile {
        from jar
        rename {'app.jar'}
    }
}

buildDocker.dependsOn(build)